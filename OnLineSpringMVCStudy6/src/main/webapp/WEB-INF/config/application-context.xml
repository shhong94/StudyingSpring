<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!-- 1. 사용자 정의 클래스 등록 -->
     <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
     <context:component-scan base-package="com.sist.*"/>
     <bean id="dbcon"
        class="com.sist.board.dao.DBConnection"
        c:driver="oracle.jdbc.driver.OracleDriver"
        c:url="jdbc:oracle:thin:@211.238.142.195:1521:XE"
        c:username="hr"
        c:password="happy"
     />
     <!-- 2. 데이터베이스 관련 -->
     <!-- 2-1. 데이터베이스 정보를 모운다 -->
     <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"
       p:driverClassName="oracle.jdbc.driver.OracleDriver"
       p:url="jdbc:oracle:thin:@211.238.142.195:1521:XE"
       p:username="hr"
       p:password="happy"
       p:maxActive="20"
       p:maxIdle="10"
       p:maxWait="-1"
     />
     <!-- 2-2. SqlSessionFactory 처리 -->
     <bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean"
       p:dataSource-ref="ds"
     />
     <!-- 2-3. Mapper구현 (인터페이스 구현) -->
     <bean id="mapper" class="org.mybatis.spring.mapper.MapperFactoryBean"
       p:sqlSessionFactory-ref="ssf"
       p:mapperInterface="com.sist.dao.EmpMapper"
     />
     
     <!-- JSP 찾기 ViewResolver -->
     <!-- 
          Spring MVC 동작 순서 
          1. 사용자 요청 (.do) (주문)  ===> 
          2. (서빙) DispatcherServlet 요청을 받는다 ===>
          3. 요청처리 => Model(@Controller) => 요청처리 하는 메소드 찾기 
             ================================================= HandlerMapping
                                          => 스프링에 의해서 메모리 할당된 클래스중에
                                             @Controller가 올라간 클래스만 찾는다
          4. Model => 해당 메소드 호출 => invoke()
          5. 결과값 (request,session) ==> 전송 
          6. 전송 => JSP를 찾아서 request를 전송하는 클래스 ==> ViewResolver
                                                      ============ 경로명,확장자
      -->
      <bean id="viewResolver"
         class="org.springframework.web.servlet.view.InternalResourceViewResolver"
         p:prefix="/"
         p:suffix=".jsp"
       />
</beans>
